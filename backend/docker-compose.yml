version: "3.8"

services:
  # Redis
  redis:
    image: redis:7-alpine
    container_name: auction-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auction Backend API
  web:
    build: .
    container_name: auction-backend
    command: uvicorn app.main:sio_app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # RQ Worker for background jobs
  worker:
    build: .
    container_name: auction-worker
    command: python -m app.worker
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # RQ Dashboard (optional - for monitoring jobs)
  rq-dashboard:
    image: eoranged/rq-dashboard
    container_name: auction-rq-dashboard
    ports:
      - "9181:9181"
    environment:
      RQ_DASHBOARD_REDIS_URL: redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis_data:
